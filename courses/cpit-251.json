{
  "courseTitle": "Software Engineering (CPIT-251)",
  "questions": [
    {
      "id": 1,
      "question": "What is the primary goal of architectural design in software engineering?",
      "options": [
        "To write detailed code for each component",
        "To identify major system components and their communications",
        "To create user interface mockups",
        "To document detailed requirements specifications"
      ],
      "correctAnswer": "To identify major system components and their communications"
    },
    {
      "id": 2,
      "question": "Which architectural pattern separates presentation, interaction, and data management?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Model-View-Controller (MVC)",
        "Pipe and filter pattern"
      ],
      "correctAnswer": "Model-View-Controller (MVC)"
    },
    {
      "id": 3,
      "question": "What is a key characteristic of agile software development?",
      "options": [
        "Detailed upfront planning",
        "Incremental delivery and customer collaboration",
        "Waterfall model implementation",
        "Extensive documentation requirements"
      ],
      "correctAnswer": "Incremental delivery and customer collaboration"
    },
    {
      "id": 4,
      "question": "Which of the following is NOT a principle of the Agile Manifesto?",
      "options": [
        "Individuals and interactions over processes and tools",
        "Comprehensive documentation over working software",
        "Customer collaboration over contract negotiation",
        "Responding to change over following a plan"
      ],
      "correctAnswer": "Comprehensive documentation over working software"
    },
    {
      "id": 5,
      "question": "What is the main advantage of incremental development?",
      "options": [
        "Reduced cost of accommodating changing requirements",
        "Less need for customer feedback",
        "Simpler project management",
        "Faster initial delivery of the complete system"
      ],
      "correctAnswer": "Reduced cost of accommodating changing requirements"
    },
    {
      "id": 6,
      "question": "Which software process model is best suited for projects with stable requirements?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 7,
      "question": "What is the primary purpose of architectural views?",
      "options": [
        "To provide different perspectives of the system for various stakeholders",
        "To document detailed implementation specifications",
        "To create user interface designs",
        "To establish coding standards"
      ],
      "correctAnswer": "To provide different perspectives of the system for various stakeholders"
    },
    {
      "id": 8,
      "question": "Which architectural pattern is best suited for systems requiring multiple levels of security?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Pipe and filter pattern",
        "Repository pattern"
      ],
      "correctAnswer": "Layered architecture"
    },
    {
      "id": 9,
      "question": "What is the main disadvantage of the repository pattern?",
      "options": [
        "Components cannot be independent",
        "Single point of failure",
        "Inefficient data management",
        "Complex implementation"
      ],
      "correctAnswer": "Single point of failure"
    },
    {
      "id": 10,
      "question": "Which agile practice involves developers working in pairs at the same workstation?",
      "options": [
        "Test-driven development",
        "Pair programming",
        "Continuous integration",
        "Scrum"
      ],
      "correctAnswer": "Pair programming"
    },
    {
      "id": 11,
      "question": "What is the primary purpose of the Rational Unified Process (RUP)?",
      "options": [
        "To provide a framework for iterative development",
        "To eliminate documentation requirements",
        "To establish a strict waterfall development process",
        "To focus solely on coding activities"
      ],
      "correctAnswer": "To provide a framework for iterative development"
    },
    {
      "id": 12,
      "question": "Which of the following is a key principle of extreme programming (XP)?",
      "options": [
        "Big design up front",
        "Test-driven development",
        "Waterfall implementation",
        "Documentation focus"
      ],
      "correctAnswer": "Test-driven development"
    },
    {
      "id": 13,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 14,
      "question": "Which software process activity involves checking that the software meets customer requirements?",
      "options": [
        "Specification",
        "Development",
        "Validation",
        "Evolution"
      ],
      "correctAnswer": "Validation"
    },
    {
      "id": 15,
      "question": "What is the main purpose of the spiral model in software development?",
      "options": [
        "To eliminate documentation",
        "To focus solely on coding",
        "To manage risks through iterative phases",
        "To establish a strict linear process"
      ],
      "correctAnswer": "To manage risks through iterative phases"
    },
    {
      "id": 16,
      "question": "Which of the following is NOT a fundamental software engineering activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 17,
      "question": "What is the primary difference between generic and customized software products?",
      "options": [
        "Generic software is developed for specific customers while customized software is sold to anyone",
        "Generic software is always free while customized software requires payment",
        "Generic software is developed for a general market while customized software meets specific customer needs",
        "There is no significant difference between them"
      ],
      "correctAnswer": "Generic software is developed for a general market while customized software meets specific customer needs"
    },
    {
      "id": 18,
      "question": "Which architectural view focuses on how the software is decomposed for development?",
      "options": [
        "Logical view",
        "Process view",
        "Development view",
        "Physical view"
      ],
      "correctAnswer": "Development view"
    },
    {
      "id": 19,
      "question": "What is the main advantage of the client-server architectural pattern?",
      "options": [
        "Centralized data management",
        "Distributed functionality across network",
        "Reduced network dependency",
        "Elimination of server components"
      ],
      "correctAnswer": "Distributed functionality across network"
    },
    {
      "id": 20,
      "question": "Which of the following is a key characteristic of good software?",
      "options": [
        "Maintainability, dependability & security, efficiency & acceptability",
        "Speed and performance",
        "Low cost and quick development",
        "User-friendly interface only"
      ],
      "correctAnswer": "Maintainability, dependability & security, efficiency & acceptability"
    },
    {
      "id": 21,
      "question": "What is the primary purpose of refactoring in software development?",
      "options": [
        "To add new features",
        "To improve code structure without changing functionality",
        "To fix bugs in the code",
        "To document the code"
      ],
      "correctAnswer": "To improve code structure without changing functionality"
    },
    {
      "id": 22,
      "question": "Which software process model is most appropriate for large systems engineering projects?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 23,
      "question": "What is the main disadvantage of the waterfall model?",
      "options": [
        "Difficulty accommodating changes after the process begins",
        "Too flexible",
        "Lack of documentation",
        "Inefficient for small projects"
      ],
      "correctAnswer": "Difficulty accommodating changes after the process begins"
    },
    {
      "id": 24,
      "question": "Which of the following is NOT a software engineering fundamental?",
      "options": [
        "Develop using a managed process",
        "Reuse existing software when possible",
        "Ignore performance considerations",
        "Understand and manage software requirements"
      ],
      "correctAnswer": "Ignore performance considerations"
    },
    {
      "id": 25,
      "question": "What is the main purpose of the requirements engineering process?",
      "options": [
        "To write code",
        "To design the user interface",
        "To establish what the system should do and its constraints",
        "To test the software"
      ],
      "correctAnswer": "To establish what the system should do and its constraints"
    },
    {
      "id": 26,
      "question": "Which of the following is a characteristic of dependable software?",
      "options": [
        "Reliability, security, and safety",
        "High memory usage",
        "Frequent crashes",
        "Incompatibility with other systems"
      ],
      "correctAnswer": "Reliability, security, and safety"
    },
    {
      "id": 27,
      "question": "What is the primary difference between software engineering and computer science?",
      "options": [
        "Computer science focuses on theory while software engineering focuses on practical aspects",
        "Software engineering is more theoretical",
        "Computer science deals with hardware while software engineering deals with software",
        "There is no significant difference"
      ],
      "correctAnswer": "Computer science focuses on theory while software engineering focuses on practical aspects"
    },
    {
      "id": 28,
      "question": "Which of the following is NOT a software process activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 29,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 30,
      "question": "Which of the following is a key challenge facing software engineering?",
      "options": [
        "Coping with increasing diversity",
        "Reducing delivery times",
        "Developing trustworthy software",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 31,
      "question": "What is the primary purpose of the architectural design phase?",
      "options": [
        "To write detailed code",
        "To identify major system components and their communications",
        "To create user interface mockups",
        "To document detailed requirements specifications"
      ],
      "correctAnswer": "To identify major system components and their communications"
    },
    {
      "id": 32,
      "question": "Which of the following is NOT a principle of agile software development?",
      "options": [
        "Customer collaboration",
        "Following a strict plan",
        "Responding to change",
        "Working software"
      ],
      "correctAnswer": "Following a strict plan"
    },
    {
      "id": 33,
      "question": "What is the main advantage of using the pipe and filter architectural pattern?",
      "options": [
        "Easy to understand and supports transformation reuse",
        "Centralized data management",
        "Distributed functionality across network",
        "Elimination of server components"
      ],
      "correctAnswer": "Easy to understand and supports transformation reuse"
    },
    {
      "id": 34,
      "question": "Which of the following is a key characteristic of the spiral model?",
      "options": [
        "Risk assessment and reduction",
        "No documentation",
        "Linear development",
        "No customer involvement"
      ],
      "correctAnswer": "Risk assessment and reduction"
    },
    {
      "id": 35,
      "question": "What is the primary purpose of the Rational Unified Process (RUP)?",
      "options": [
        "To provide a framework for iterative development",
        "To eliminate documentation requirements",
        "To establish a strict waterfall development process",
        "To focus solely on coding activities"
      ],
      "correctAnswer": "To provide a framework for iterative development"
    },
    {
      "id": 36,
      "question": "Which of the following is NOT a fundamental software engineering activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 37,
      "question": "What is the main purpose of the requirements engineering process?",
      "options": [
        "To write code",
        "To design the user interface",
        "To establish what the system should do and its constraints",
        "To test the software"
      ],
      "correctAnswer": "To establish what the system should do and its constraints"
    },
    {
      "id": 38,
      "question": "Which of the following is a characteristic of dependable software?",
      "options": [
        "Reliability, security, and safety",
        "High memory usage",
        "Frequent crashes",
        "Incompatibility with other systems"
      ],
      "correctAnswer": "Reliability, security, and safety"
    },
    {
      "id": 39,
      "question": "What is the primary difference between software engineering and computer science?",
      "options": [
        "Computer science focuses on theory while software engineering focuses on practical aspects",
        "Software engineering is more theoretical",
        "Computer science deals with hardware while software engineering deals with software",
        "There is no significant difference"
      ],
      "correctAnswer": "Computer science focuses on theory while software engineering focuses on practical aspects"
    },
    {
      "id": 40,
      "question": "Which of the following is NOT a software process activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 41,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 42,
      "question": "Which of the following is a key challenge facing software engineering?",
      "options": [
        "Coping with increasing diversity",
        "Reducing delivery times",
        "Developing trustworthy software",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 43,
      "question": "What is the primary purpose of architectural design in software engineering?",
      "options": [
        "To write detailed code for each component",
        "To identify major system components and their communications",
        "To create user interface mockups",
        "To document detailed requirements specifications"
      ],
      "correctAnswer": "To identify major system components and their communications"
    },
    {
      "id": 44,
      "question": "Which architectural pattern separates presentation, interaction, and data management?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Model-View-Controller (MVC)",
        "Pipe and filter pattern"
      ],
      "correctAnswer": "Model-View-Controller (MVC)"
    },
    {
      "id": 45,
      "question": "What is a key characteristic of agile software development?",
      "options": [
        "Detailed upfront planning",
        "Incremental delivery and customer collaboration",
        "Waterfall model implementation",
        "Extensive documentation requirements"
      ],
      "correctAnswer": "Incremental delivery and customer collaboration"
    },
    {
      "id": 46,
      "question": "Which of the following is NOT a principle of the Agile Manifesto?",
      "options": [
        "Individuals and interactions over processes and tools",
        "Comprehensive documentation over working software",
        "Customer collaboration over contract negotiation",
        "Responding to change over following a plan"
      ],
      "correctAnswer": "Comprehensive documentation over working software"
    },
    {
      "id": 47,
      "question": "What is the main advantage of incremental development?",
      "options": [
        "Reduced cost of accommodating changing requirements",
        "Less need for customer feedback",
        "Simpler project management",
        "Faster initial delivery of the complete system"
      ],
      "correctAnswer": "Reduced cost of accommodating changing requirements"
    },
    {
      "id": 48,
      "question": "Which software process model is best suited for projects with stable requirements?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 49,
      "question": "What is the primary purpose of architectural views?",
      "options": [
        "To provide different perspectives of the system for various stakeholders",
        "To document detailed implementation specifications",
        "To create user interface designs",
        "To establish coding standards"
      ],
      "correctAnswer": "To provide different perspectives of the system for various stakeholders"
    },
    {
      "id": 50,
      "question": "Which architectural pattern is best suited for systems requiring multiple levels of security?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Pipe and filter pattern",
        "Repository pattern"
      ],
      "correctAnswer": "Layered architecture"
    },
    {
      "id": 51,
      "question": "What is the main disadvantage of the repository pattern?",
      "options": [
        "Components cannot be independent",
        "Single point of failure",
        "Inefficient data management",
        "Complex implementation"
      ],
      "correctAnswer": "Single point of failure"
    },
    {
      "id": 52,
      "question": "Which agile practice involves developers working in pairs at the same workstation?",
      "options": [
        "Test-driven development",
        "Pair programming",
        "Continuous integration",
        "Scrum"
      ],
      "correctAnswer": "Pair programming"
    },
    {
      "id": 53,
      "question": "What is the primary purpose of the Rational Unified Process (RUP)?",
      "options": [
        "To provide a framework for iterative development",
        "To eliminate documentation requirements",
        "To establish a strict waterfall development process",
        "To focus solely on coding activities"
      ],
      "correctAnswer": "To provide a framework for iterative development"
    },
    {
      "id": 54,
      "question": "Which of the following is a key principle of extreme programming (XP)?",
      "options": [
        "Big design up front",
        "Test-driven development",
        "Waterfall implementation",
        "Documentation focus"
      ],
      "correctAnswer": "Test-driven development"
    },
    {
      "id": 55,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 56,
      "question": "Which software process activity involves checking that the software meets customer requirements?",
      "options": [
        "Specification",
        "Development",
        "Validation",
        "Evolution"
      ],
      "correctAnswer": "Validation"
    },
    {
      "id": 57,
      "question": "What is the main purpose of the spiral model in software development?",
      "options": [
        "To eliminate documentation",
        "To focus solely on coding",
        "To manage risks through iterative phases",
        "To establish a strict linear process"
      ],
      "correctAnswer": "To manage risks through iterative phases"
    },
    {
      "id": 58,
      "question": "Which of the following is NOT a fundamental software engineering activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 59,
      "question": "What is the primary difference between generic and customized software products?",
      "options": [
        "Generic software is developed for specific customers while customized software is sold to anyone",
        "Generic software is always free while customized software requires payment",
        "Generic software is developed for a general market while customized software meets specific customer needs",
        "There is no significant difference between them"
      ],
      "correctAnswer": "Generic software is developed for a general market while customized software meets specific customer needs"
    },
    {
      "id": 60,
      "question": "Which architectural view focuses on how the software is decomposed for development?",
      "options": [
        "Logical view",
        "Process view",
        "Development view",
        "Physical view"
      ],
      "correctAnswer": "Development view"
    },
    {
      "id": 61,
      "question": "What is the main advantage of the client-server architectural pattern?",
      "options": [
        "Centralized data management",
        "Distributed functionality across network",
        "Reduced network dependency",
        "Elimination of server components"
      ],
      "correctAnswer": "Distributed functionality across network"
    },
    {
      "id": 62,
      "question": "Which of the following is a key characteristic of good software?",
      "options": [
        "Maintainability, dependability & security, efficiency & acceptability",
        "Speed and performance",
        "Low cost and quick development",
        "User-friendly interface only"
      ],
      "correctAnswer": "Maintainability, dependability & security, efficiency & acceptability"
    },
    {
      "id": 63,
      "question": "What is the primary purpose of refactoring in software development?",
      "options": [
        "To add new features",
        "To improve code structure without changing functionality",
        "To fix bugs in the code",
        "To document the code"
      ],
      "correctAnswer": "To improve code structure without changing functionality"
    },
    {
      "id": 64,
      "question": "Which software process model is most appropriate for large systems engineering projects?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 65,
      "question": "What is the main disadvantage of the waterfall model?",
      "options": [
        "Difficulty accommodating changes after the process begins",
        "Too flexible",
        "Lack of documentation",
        "Inefficient for small projects"
      ],
      "correctAnswer": "Difficulty accommodating changes after the process begins"
    },
    {
      "id": 66,
      "question": "Which of the following is NOT a software engineering fundamental?",
      "options": [
        "Develop using a managed process",
        "Reuse existing software when possible",
        "Ignore performance considerations",
        "Understand and manage software requirements"
      ],
      "correctAnswer": "Ignore performance considerations"
    },
    {
      "id": 67,
      "question": "What is the main purpose of the requirements engineering process?",
      "options": [
        "To write code",
        "To design the user interface",
        "To establish what the system should do and its constraints",
        "To test the software"
      ],
      "correctAnswer": "To establish what the system should do and its constraints"
    },
    {
      "id": 68,
      "question": "Which of the following is a characteristic of dependable software?",
      "options": [
        "Reliability, security, and safety",
        "High memory usage",
        "Frequent crashes",
        "Incompatibility with other systems"
      ],
      "correctAnswer": "Reliability, security, and safety"
    },
    {
      "id": 69,
      "question": "What is the primary difference between software engineering and computer science?",
      "options": [
        "Computer science focuses on theory while software engineering focuses on practical aspects",
        "Software engineering is more theoretical",
        "Computer science deals with hardware while software engineering deals with software",
        "There is no significant difference"
      ],
      "correctAnswer": "Computer science focuses on theory while software engineering focuses on practical aspects"
    },
    {
      "id": 70,
      "question": "Which of the following is NOT a software process activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 71,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 72,
      "question": "Which of the following is a key challenge facing software engineering?",
      "options": [
        "Coping with increasing diversity",
        "Reducing delivery times",
        "Developing trustworthy software",
        "All of the above"
      ],
      "correctAnswer": "All of the above"
    },
    {
      "id": 73,
      "question": "What is the primary purpose of architectural design in software engineering?",
      "options": [
        "To write detailed code for each component",
        "To identify major system components and their communications",
        "To create user interface mockups",
        "To document detailed requirements specifications"
      ],
      "correctAnswer": "To identify major system components and their communications"
    },
    {
      "id": 74,
      "question": "Which architectural pattern separates presentation, interaction, and data management?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Model-View-Controller (MVC)",
        "Pipe and filter pattern"
      ],
      "correctAnswer": "Model-View-Controller (MVC)"
    },
    {
      "id": 75,
      "question": "What is a key characteristic of agile software development?",
      "options": [
        "Detailed upfront planning",
        "Incremental delivery and customer collaboration",
        "Waterfall model implementation",
        "Extensive documentation requirements"
      ],
      "correctAnswer": "Incremental delivery and customer collaboration"
    },
    {
      "id": 76,
      "question": "Which of the following is NOT a principle of the Agile Manifesto?",
      "options": [
        "Individuals and interactions over processes and tools",
        "Comprehensive documentation over working software",
        "Customer collaboration over contract negotiation",
        "Responding to change over following a plan"
      ],
      "correctAnswer": "Comprehensive documentation over working software"
    },
    {
      "id": 77,
      "question": "What is the main advantage of incremental development?",
      "options": [
        "Reduced cost of accommodating changing requirements",
        "Less need for customer feedback",
        "Simpler project management",
        "Faster initial delivery of the complete system"
      ],
      "correctAnswer": "Reduced cost of accommodating changing requirements"
    },
    {
      "id": 78,
      "question": "Which software process model is best suited for projects with stable requirements?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 79,
      "question": "What is the primary purpose of architectural views?",
      "options": [
        "To provide different perspectives of the system for various stakeholders",
        "To document detailed implementation specifications",
        "To create user interface designs",
        "To establish coding standards"
      ],
      "correctAnswer": "To provide different perspectives of the system for various stakeholders"
    },
    {
      "id": 80,
      "question": "Which architectural pattern is best suited for systems requiring multiple levels of security?",
      "options": [
        "Layered architecture",
        "Client-server pattern",
        "Pipe and filter pattern",
        "Repository pattern"
      ],
      "correctAnswer": "Layered architecture"
    },
    {
      "id": 81,
      "question": "What is the main disadvantage of the repository pattern?",
      "options": [
        "Components cannot be independent",
        "Single point of failure",
        "Inefficient data management",
        "Complex implementation"
      ],
      "correctAnswer": "Single point of failure"
    },
    {
      "id": 82,
      "question": "Which agile practice involves developers working in pairs at the same workstation?",
      "options": [
        "Test-driven development",
        "Pair programming",
        "Continuous integration",
        "Scrum"
      ],
      "correctAnswer": "Pair programming"
    },
    {
      "id": 83,
      "question": "What is the primary purpose of the Rational Unified Process (RUP)?",
      "options": [
        "To provide a framework for iterative development",
        "To eliminate documentation requirements",
        "To establish a strict waterfall development process",
        "To focus solely on coding activities"
      ],
      "correctAnswer": "To provide a framework for iterative development"
    },
    {
      "id": 84,
      "question": "Which of the following is a key principle of extreme programming (XP)?",
      "options": [
        "Big design up front",
        "Test-driven development",
        "Waterfall implementation",
        "Documentation focus"
      ],
      "correctAnswer": "Test-driven development"
    },
    {
      "id": 85,
      "question": "What is the main advantage of using architectural patterns?",
      "options": [
        "They eliminate the need for design decisions",
        "They provide proven solutions for common architectural challenges",
        "They ensure identical implementations across projects",
        "They remove the need for system analysis"
      ],
      "correctAnswer": "They provide proven solutions for common architectural challenges"
    },
    {
      "id": 86,
      "question": "Which software process activity involves checking that the software meets customer requirements?",
      "options": [
        "Specification",
        "Development",
        "Validation",
        "Evolution"
      ],
      "correctAnswer": "Validation"
    },
    {
      "id": 87,
      "question": "What is the main purpose of the spiral model in software development?",
      "options": [
        "To eliminate documentation",
        "To focus solely on coding",
        "To manage risks through iterative phases",
        "To establish a strict linear process"
      ],
      "correctAnswer": "To manage risks through iterative phases"
    },
    {
      "id": 88,
      "question": "Which of the following is NOT a fundamental software engineering activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    },
    {
      "id": 89,
      "question": "What is the primary difference between generic and customized software products?",
      "options": [
        "Generic software is developed for specific customers while customized software is sold to anyone",
        "Generic software is always free while customized software requires payment",
        "Generic software is developed for a general market while customized software meets specific customer needs",
        "There is no significant difference between them"
      ],
      "correctAnswer": "Generic software is developed for a general market while customized software meets specific customer needs"
    },
    {
      "id": 90,
      "question": "Which architectural view focuses on how the software is decomposed for development?",
      "options": [
        "Logical view",
        "Process view",
        "Development view",
        "Physical view"
      ],
      "correctAnswer": "Development view"
    },
    {
      "id": 91,
      "question": "What is the main advantage of the client-server architectural pattern?",
      "options": [
        "Centralized data management",
        "Distributed functionality across network",
        "Reduced network dependency",
        "Elimination of server components"
      ],
      "correctAnswer": "Distributed functionality across network"
    },
    {
      "id": 92,
      "question": "Which of the following is a key characteristic of good software?",
      "options": [
        "Maintainability, dependability & security, efficiency & acceptability",
        "Speed and performance",
        "Low cost and quick development",
        "User-friendly interface only"
      ],
      "correctAnswer": "Maintainability, dependability & security, efficiency & acceptability"
    },
    {
      "id": 93,
      "question": "What is the primary purpose of refactoring in software development?",
      "options": [
        "To add new features",
        "To improve code structure without changing functionality",
        "To fix bugs in the code",
        "To document the code"
      ],
      "correctAnswer": "To improve code structure without changing functionality"
    },
    {
      "id": 94,
      "question": "Which software process model is most appropriate for large systems engineering projects?",
      "options": [
        "Waterfall model",
        "Agile development",
        "Incremental development",
        "Spiral model"
      ],
      "correctAnswer": "Waterfall model"
    },
    {
      "id": 95,
      "question": "What is the main disadvantage of the waterfall model?",
      "options": [
        "Difficulty accommodating changes after the process begins",
        "Too flexible",
        "Lack of documentation",
        "Inefficient for small projects"
      ],
      "correctAnswer": "Difficulty accommodating changes after the process begins"
    },
    {
      "id": 96,
      "question": "Which of the following is NOT a software engineering fundamental?",
      "options": [
        "Develop using a managed process",
        "Reuse existing software when possible",
        "Ignore performance considerations",
        "Understand and manage software requirements"
      ],
      "correctAnswer": "Ignore performance considerations"
    },
    {
      "id": 97,
      "question": "What is the main purpose of the requirements engineering process?",
      "options": [
        "To write code",
        "To design the user interface",
        "To establish what the system should do and its constraints",
        "To test the software"
      ],
      "correctAnswer": "To establish what the system should do and its constraints"
    },
    {
      "id": 98,
      "question": "Which of the following is a characteristic of dependable software?",
      "options": [
        "Reliability, security, and safety",
        "High memory usage",
        "Frequent crashes",
        "Incompatibility with other systems"
      ],
      "correctAnswer": "Reliability, security, and safety"
    },
    {
      "id": 99,
      "question": "What is the primary difference between software engineering and computer science?",
      "options": [
        "Computer science focuses on theory while software engineering focuses on practical aspects",
        "Software engineering is more theoretical",
        "Computer science deals with hardware while software engineering deals with software",
        "There is no significant difference"
      ],
      "correctAnswer": "Computer science focuses on theory while software engineering focuses on practical aspects"
    },
    {
      "id": 100,
      "question": "Which of the following is NOT a software process activity?",
      "options": [
        "Software specification",
        "Software development",
        "Software validation",
        "Software installation"
      ],
      "correctAnswer": "Software installation"
    }
  ]
}
